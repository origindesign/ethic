/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */@import url(https://fonts.googleapis.com/css2?family=Barlow+Condensed:ital@0;1&family=Teko:wght@500;600&display=swap);html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}@font-face{font-family:icomoon;font-weight:400;font-style:normal;font-display:swap;src:url(https://d1azc1qln24ryf.cloudfront.net/42560/Ethic/icomoon.woff2?6tr204) format("woff2"),url(https://d1azc1qln24ryf.cloudfront.net/42560/Ethic/icomoon.woff?6tr204) format("woff")}.transition{transition:all .3s ease-in-out 0s}.fade-in{transition-duration:.8s;opacity:0}.fade-in.in-view{opacity:1}img[data-sizes]{transition-duration:.8s}img[data-sizes]:not(.lazyloaded){opacity:0}.container{display:grid;grid-template-rows:auto;grid-template-columns:8vw minmax(0,1fr) 8vw;grid-template-areas:"a b c"}@media (min-width:740px){.container{grid-template-columns:6.5vw minmax(0,1fr) 6.5vw}}@media (min-width:1600px){.container{grid-template-columns:7.5vw minmax(0,1fr) 7.5vw}}.row{margin-top:4em;margin-bottom:4em}@media (min-width:960px){.row{margin-top:7em;margin-bottom:7em}}.row:first-child{margin-top:0}.row:last-child{margin-bottom:0}.row-padding{padding-top:4em;padding-bottom:4em}@media (min-width:960px){.row-padding{padding-top:7em;padding-bottom:7em}}.grid-area-main{grid-area:b}*{box-sizing:border-box}:focus{outline:2px dotted}:focus:not(:focus-visible){outline:0}html{font-size:62.5%;background:#fff}body{font-size:14px;font-size:1.4rem;line-height:1.3;font-family:Barlow Condensed,sans-serif;color:#212121}@media (min-width:740px){body{font-size:18px;font-size:1.8rem}}h1:first-child,h2:first-child{margin-top:0}h1:last-child,h2:last-child{margin-bottom:0}h1{font-size:50px;font-size:5rem}.h2,h1,h2{font-weight:500;text-transform:uppercase;line-height:1;margin:0}.h2,h2{font-size:40px;font-size:4rem}@media (min-width:740px){.h2,h2{font-size:64px;font-size:6.4rem}}@media (min-width:1400px){.h2,h2{font-size:80px;font-size:8rem}}.h3,h3{font-size:20px;font-size:2rem;font-weight:500;text-transform:uppercase;line-height:1;margin:0}@media (min-width:740px){.h3,h3{font-size:30px;font-size:3rem}}p{margin:1.5em 0}p:first-child{margin-top:0}p:last-child{margin-bottom:0}a{transition:all .3s ease-in-out 0s;text-decoration:none}a,a:focus,a:hover{color:#212121}img{max-width:100%;height:auto;display:block}sup{font-size:25%;top:-2.5em}.media{position:relative;padding-bottom:56.25%}.media img.lazyautosizes.lazyloaded,.media img:not(.lazyautosizes){width:100%;height:100%;position:absolute;top:0;left:0}.media .lazysizes-display-clone{height:100%!important}.media img{transition:all .3s ease-in-out 0s;position:absolute}.media img.lazyload{opacity:0}.media img.lazyloaded{opacity:1}.media img.lazyautosizes.lazyloaded,.media img:not(.lazyautosizes){-o-object-fit:cover;object-fit:cover;-o-object-position:50% 50%;object-position:50% 50%;font-family:"object-fit: cover; object-position: 50% 50%"}.media.cover{padding:0}.visually-hidden{clip:rect(1px,1px,1px,1px);height:1px;overflow:hidden;overflow-wrap:normal;position:absolute!important;width:1px}.cover{width:100%;height:100%;position:absolute;top:0;left:0}.reset,.reset li{margin:0;padding:0;list-style:none}.reset li:before{display:none}.d-block{display:block}.d-flex{display:flex}.pos-relative{position:relative}.pos-absolute{position:absolute;width:100%}.z-index-10{z-index:2}.z-index-20{z-index:3}.overflow-hidden{overflow:hidden}.jc-center{justify-content:center}.ai-center{align-items:center}.direction-column{flex-direction:column}.t-align-center{text-align:center}.t-c-white{color:#fff}.t-large{font-size:17px;font-size:1.7rem}@media (min-width:740px){.t-large{font-size:22px;font-size:2.2rem}}@media (min-width:1400px){.t-large{font-size:24px;font-size:2.4rem}}.p-t-2{padding-top:2em}.p-b-3{padding-bottom:3em}.m-t-1{margin-top:1em}.m-t-2{margin-top:2em}.m-b-05{margin-bottom:.5em}.bg-grey{background:#545454}.bg-primary{background:#40699d}.border-top-white{border-top:1px solid #fff}.button{transition:all .3s ease-in-out 0s;font-size:19px;font-size:1.9rem;color:#fff;background:#40699d;border:0;padding:.5em 1.5em;outline-color:#40699d;outline-offset:2px;font-weight:600}.button:focus,.button:hover{background:#20354f;cursor:pointer}@media (min-width:740px){.button{font-size:30px;font-size:3rem}}form .form-item{margin:3.75em 0;position:relative}form .form-item:after{clear:both;content:"";display:block}form .form-item:first-child{margin-top:0}form .form-item:last-child{margin-bottom:0}form button,form input{-webkit-appearance:none!important;-webkit-border-radius:0!important}form input[type=email],form input[type=text]{font-size:18px;font-size:1.8rem;background:#545454;width:100%;padding:0 1em;line-height:3em;height:3em;color:#212121;border:none;outline-color:#fff;outline-offset:2px;margin-left:auto;margin-right:auto;max-width:440px}form label{display:block;margin-bottom:.5em}form button[type=submit],form input[type=submit]{margin-top:2em;outline-offset:2px}form button[type=submit]:focus,form input[type=submit]:focus{outline:2px dotted #40699d}button[type=submit],input[type=submit]{transition:all .3s ease-in-out 0s;font-size:19px;font-size:1.9rem;color:#fff;background:#40699d;border:0;padding:.5em 1.5em;outline-color:#40699d;outline-offset:2px;font-weight:600;-webkit-appearance:none!important;-webkit-border-radius:2px!important}button[type=submit]:focus,button[type=submit]:hover,input[type=submit]:focus,input[type=submit]:hover{background:#20354f;cursor:pointer}@media (min-width:740px){button[type=submit],input[type=submit]{font-size:30px;font-size:3rem}}button[type=submit]:focus,input[type=submit]:focus{outline:2px dotted #40699d}.social li:not(:last-child){margin-right:1em}.social a{position:relative;outline-offset:2px}.social a,.social a:before{width:25px;height:25px;display:block}.social a:before{transition:all .3s ease-in-out 0s;position:absolute;content:"";color:#40699d;font-size:25px;font-family:icomoon;font-style:normal;font-weight:400;speak:none;text-decoration:none;text-align:center;text-rendering:optimizeLegibility;line-height:25px;float:left;z-index:1;text-indent:0;top:50%;left:50%;right:auto;bottom:auto;transform:translateX(-50%);transform:translateY(-50%);transform:translate(-50%,-50%)}.social a[href*=instagram]:before{content:"\e901"}.social a[href*=facebook]:before{content:"\e900"}.parallax{transform:translateY(var(--parallax-offset))!important}.site-header{height:450px}@media (min-width:740px){.site-header{height:650px}}@media (min-width:960px){.site-header{height:750px}}.site-header .logo{width:160px}@media (min-width:740px){.site-header .logo{width:400px}}@media (min-width:1400px){.site-header .logo{width:550px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
