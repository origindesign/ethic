/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */@import url(https://fonts.googleapis.com/css2?family=Barlow+Condensed:ital,wght@0,400;0,600;1,400;1,600&family=Teko:wght@300;500;600&display=swap);html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}@font-face{font-family:icomoon;font-weight:400;font-style:normal;font-display:swap;src:url(https://d1azc1qln24ryf.cloudfront.net/42560/Ethic/icomoon.woff2?qfl6sp) format("woff2"),url(https://d1azc1qln24ryf.cloudfront.net/42560/Ethic/icomoon.woff?qfl6sp) format("woff")}.transition{transition:all .3s ease-in-out 0s}.fade-in{transition-duration:.8s;opacity:0}.fade-in.in-view{opacity:1}img[data-sizes]{transition-duration:.8s}img[data-sizes]:not(.lazyloaded){opacity:0}.container{display:grid;grid-template-rows:auto;grid-template-columns:8vw minmax(0,1fr) 8vw;grid-template-areas:"a b c"}@media (min-width:740px){.container{grid-template-columns:6.5vw minmax(0,1fr) 6.5vw}}@media (min-width:1600px){.container{grid-template-columns:7.5vw minmax(0,1fr) 7.5vw}}.inner-grid{position:relative;display:grid;row-gap:2em;column-gap:1.7em;grid-template-rows:auto;grid-template-columns:repeat(12,minmax(0,1fr))}@media (min-width:1px) and (max-width:739px){.inner-grid{column-gap:0}}.content-container{grid-column:2/span 10}@media (min-width:960px){.content-container{grid-column:3/span 8}}@media (min-width:1600px){.content-container{grid-column:4/span 6}}.content-container-offset-right{grid-column:3/span 10}@media (min-width:360px){.content-container-offset-right{grid-column:4/span 9}}@media (min-width:740px){.content-container-offset-right{grid-column:3/span 9}}@media (min-width:960px){.content-container-offset-right{grid-column:2/span 10}}@media (min-width:1400px){.content-container-offset-right{grid-column:3/span 8}}.row-gap-base{row-gap:7em}@media (min-width:740px){.row-gap-base{row-gap:10em}}@media (min-width:1400px){.row-gap-base{row-gap:13em}}.grid-offset-left{margin-left:-8vw}@media (min-width:740px){.grid-offset-left{margin-left:-6.5vw}}@media (min-width:1600px){.grid-offset-left{margin-left:-7.5vw}}.grid-offset-right{margin-right:-8vw}@media (min-width:740px){.grid-offset-right{margin-right:-6.5vw}}@media (min-width:1600px){.grid-offset-right{margin-right:-7.5vw}}.row{margin-top:7em;margin-bottom:7em}@media (min-width:740px){.row{margin-top:10em;margin-bottom:10em}}@media (min-width:1400px){.row{margin-top:13em;margin-bottom:13em}}.row:first-child{margin-top:0}.row:last-child{margin-bottom:0}.row-padding{padding-top:7em;padding-bottom:7em}@media (min-width:740px){.row-padding{padding-top:10em;padding-bottom:10em}}@media (min-width:1400px){.row-padding{padding-top:13em;padding-bottom:13em}}.row-padding-top{padding-top:7em}@media (min-width:740px){.row-padding-top{padding-top:10em}}@media (min-width:1400px){.row-padding-top{padding-top:13em}}.row-padding-bottom{padding-bottom:7em}@media (min-width:740px){.row-padding-bottom{padding-bottom:10em}}@media (min-width:1400px){.row-padding-bottom{padding-bottom:13em}}.grid-main-full{grid-column:1/span 3}.grid-column-main{grid-column:2/span 1}.grid-area-main{grid-area:b}*{box-sizing:border-box}:focus{outline:2px dotted}:focus:not(:focus-visible){outline:0}html{font-size:62.5%;background:#fff}body{font-size:1.4rem;line-height:1.6;font-family:Barlow Condensed,sans-serif;color:#212121}@media (min-width:740px){body{font-size:1.8rem}}h1:first-child,h2:first-child{margin-top:0}h1:last-child,h2:last-child{margin-bottom:0}.h1,h1{font-size:6.2rem;font-weight:500;text-transform:uppercase;font-family:Teko,sans-serif;line-height:.75;margin:0}@media (min-width:740px){.h1,h1{font-size:16rem}}.h2,h2{font-size:4rem;font-weight:500;text-transform:uppercase;font-family:Teko,sans-serif;line-height:.8;margin:0}@media (min-width:740px){.h2,h2{font-size:8rem}}@media (min-width:1400px){.h2,h2{font-size:9.6rem}}.h3,h3{font-size:2.4rem;line-height:1;margin:0 0 1.5em;font-weight:400}@media (min-width:740px){.h3,h3{font-size:3.4rem}}.h4,h4{font-size:2rem;font-weight:500;text-transform:uppercase;font-family:Teko,sans-serif;line-height:1;margin:0}@media (min-width:740px){.h4,h4{font-size:2.4rem}}@media (min-width:1400px){.h4,h4{font-size:3rem}}p{margin:1.5em 0}p:first-child{margin-top:0}p:last-child{margin-bottom:0}a{transition:all .3s ease-in-out 0s;text-decoration:none}a,a:focus,a:hover{color:#212121}img{max-width:100%;height:auto;display:block}sup{font-size:25%;top:-2.5em}.media{position:relative;padding-bottom:56.25%}.media img.lazyautosizes.lazyloaded,.media img:not(.lazyautosizes){width:100%;height:100%;position:absolute;top:0;left:0}.media .lazysizes-display-clone{height:100%!important}.media img{transition-duration:.8s;position:absolute}.media img.lazyload{opacity:0}.media img.lazyloaded{opacity:1}.media img.lazyautosizes.lazyloaded,.media img:not(.lazyautosizes){-o-object-fit:cover;object-fit:cover;-o-object-position:50% 50%;object-position:50% 50%;font-family:"object-fit: cover; object-position: 50% 50%"}.media.focus-middle-left img{-o-object-position:0 50%!important;object-position:0 50%!important;font-family:"object-position: 0 50%"!important}.media.focus-middle-right img{-o-object-position:100% 50%!important;object-position:100% 50%!important;font-family:"object-position: 100% 50%"!important}.media.cover{padding:0}.media.portrait{padding-bottom:125%}.visually-hidden{clip:rect(1px,1px,1px,1px);height:1px;overflow:hidden;overflow-wrap:normal;position:absolute!important;width:1px}.reset,.reset li{margin:0;padding:0;list-style:none}.reset li:before{display:none}.cover{width:100%;height:100%;position:absolute;top:0;left:0}.d-block{display:block}.d-flex{display:flex}.pos-relative{position:relative}.pos-absolute{position:absolute;width:100%}.z-index-10{z-index:2}.z-index-20{z-index:3}.overflow-hidden{overflow:hidden}.pseudo-before{position:relative}.pseudo-before:before{width:100%;height:100%;position:absolute;top:0;left:0;display:block;content:"";transition:all .3s ease-in-out 0s}@media (min-width:1px) and (max-width:739px){.hide-phone{display:none!important}}.jc-flex-start{justify-content:flex-start}.jc-space-between{justify-content:space-between}.ai-center{align-items:center}.direction-column{flex-direction:column}.flex-wrap{flex-wrap:wrap}.t-shadow{text-shadow:0 0 10px rgba(0,0,0,.25)}.t-align-center{text-align:center}.t-c-white{color:#fff}.t-c-primary{color:#0079a8}.t-large{font-size:1.7rem}@media (min-width:740px){.t-large{font-size:2.4rem}}.t-larger{font-size:2.4rem}@media (min-width:1400px){.t-larger{font-size:3.4rem}}.t-largest{font-size:2.8rem;line-height:1.3}@media (min-width:740px){.t-largest{font-size:5rem}}.p-b-2,.p-v-2{padding-bottom:2em}.p-v-2{padding-top:2em}.m-t-base{margin-top:1.5em}.m-t-1{margin-top:1em}.m-b-base{margin-bottom:1.5em}.bg-grey{background:#545454}.bg-grey-dark{background:#212121}.bg-primary{background:#0079a8}.pattern-vertical:before{z-index:4;width:30px;background-image:url(../images/pattern-vertical.svg)}@media (min-width:740px){.pattern-vertical:before{width:54px}}@media (min-width:1400px){.pattern-vertical:before{width:72px}}.pattern-vertical.align--right:before{left:auto;right:0}.pattern-vertical.top:before{top:-3.5em;height:calc(100% + 7em)}@media (min-width:740px){.pattern-vertical.top:before{top:-5em;height:calc(100% + 10em)}}@media (min-width:1400px){.pattern-vertical.top:before{top:-6.5em;height:calc(100% + 13em)}}.pattern-vertical.bottom:before{top:auto;bottom:-3.5em}@media (min-width:740px){.pattern-vertical.bottom:before{bottom:-5em}}@media (min-width:1400px){.pattern-vertical.bottom:before{bottom:-6.5em}}.pattern-vertical.extend:before{height:1000vh}.pattern-horizontal:before{z-index:4;height:30px;width:40%;background-image:url(../images/pattern-horizontal.svg)}@media (min-width:740px){.pattern-horizontal:before{height:54px}}@media (min-width:1400px){.pattern-horizontal:before{height:72px}}.pattern-horizontal.right:before{left:auto;right:0}.pattern-horizontal.top:before{transform:translateY(-50%)}.pattern-horizontal.bottom:before{top:auto;bottom:0;transform:translateY(50%)}.border-bottom{border-bottom:2px solid #d9d9d9}.button{transition:all .3s ease-in-out 0s;font-size:2rem;font-weight:500;text-transform:uppercase;font-family:Teko,sans-serif;line-height:1;color:#fff;background:#0079a8;border:0;padding:.5em 1.5em;outline-color:#0079a8;outline-offset:2px}@media (min-width:740px){.button{font-size:2.6rem}}.button:focus,.button:hover{background:#003d54;cursor:pointer}.link-arrow{font-size:2rem;font-weight:500;text-transform:uppercase;font-family:Teko,sans-serif;line-height:1;position:relative;padding-right:1em;color:#0079a8;outline-color:#0079a8}@media (min-width:740px){.link-arrow{font-size:2.6rem}}.link-arrow:before{transition:all .3s ease-in-out 0s;position:absolute;content:"\e907";color:inherit;font-size:16px;font-family:icomoon;font-style:normal;font-weight:400;speak:none;display:block;text-decoration:none;width:16px;height:16px;text-align:center;text-rendering:optimizeLegibility;line-height:16px;float:left;z-index:1;text-indent:0;top:50%;left:auto;right:0;bottom:auto;transform:translateY(-50%);top:calc(50% - 1px)}.link-arrow:focus,.link-arrow:hover{color:#003d54}.link-arrow:focus:before,.link-arrow:hover:before{right:-.3em}@media (min-width:1px) and (max-width:739px){form{display:block!important}}@media (min-width:1400px){form{margin:0 -.85em;flex-wrap:nowrap!important}}form .form-item{margin:1.5em 0}form .form-item:first-child{margin-top:0}form .form-item:last-child{margin-bottom:0}@media (min-width:740px){form .form-item{margin:0;align-self:flex-end;flex-basis:calc(50% - .85em)}form .form-item:nth-child(3),form .form-item:nth-child(4){margin-top:1.5em}form .form-item.type-email{flex-basis:auto;padding-right:1.7em;flex-grow:2}form .form-item.form-actions{flex-basis:auto;flex-grow:0}}@media (min-width:1400px){form .form-item{flex-basis:auto;padding:0 .85em!important;margin:0!important;flex-grow:1}}form button,form input{-webkit-appearance:none!important;-webkit-border-radius:0!important}form input[type=email],form input[type=text]{font-size:1.8rem;background:#d9d9d9;width:100%;padding:0 .5em;line-height:50px;height:50px;color:#212121;border:none;outline-color:#212121;outline-offset:2px}form label{display:block;margin-bottom:.5em}form label.required:after{content:" *";color:red}form button[type=submit],form input[type=submit]{transition:all .3s ease-in-out 0s;font-size:2rem;font-weight:500;text-transform:uppercase;font-family:Teko,sans-serif;line-height:1;color:#fff;background:#0079a8;border:0;padding:.5em 1.5em;outline-color:#0079a8;padding-top:0;padding-bottom:0;outline-offset:2px;height:50px;line-height:50px}@media (min-width:740px){form button[type=submit],form input[type=submit]{font-size:2.6rem}}form button[type=submit]:focus,form button[type=submit]:hover,form input[type=submit]:focus,form input[type=submit]:hover{background:#003d54;cursor:pointer}form button[type=submit]:focus,form input[type=submit]:focus{outline:2px dotted #0079a8}@media (min-width:960px){.paragraph--image-aside-copy{padding-top:0;padding-bottom:0}}.paragraph--image-aside-copy>.copy{grid-column:3/span 10}@media (min-width:1px) and (max-width:959px){.paragraph--image-aside-copy>.copy{padding-top:0;padding-bottom:0}}@media (min-width:360px){.paragraph--image-aside-copy>.copy{grid-column:4/span 9}}@media (min-width:740px){.paragraph--image-aside-copy>.copy{grid-column:3/span 9}}@media (min-width:960px){.paragraph--image-aside-copy>.copy{padding-top:15em;padding-bottom:15em;grid-column:7/span 6}}@media (min-width:1400px){.paragraph--image-aside-copy>.copy{padding-top:19.5em;padding-bottom:19.5em;grid-column:8/span 4}}.paragraph--image-aside-copy>.image{grid-column:1/span 12}@media (min-width:960px){.paragraph--image-aside-copy>.image{grid-column:1/span 5;grid-row:1}}@media (min-width:1400px){.paragraph--image-aside-copy>.image{grid-column:1/span 6}}.paragraph--image-aside-copy>.image:before{background:#212121;width:92%}@media (min-width:1px) and (max-width:959px){.paragraph--image-aside-copy>.image .cover{position:static!important;height:auto!important}}@media (min-width:960px){.paragraph--image-aside-copy>.image .media{width:100%;height:100%;position:absolute;top:0;left:0;padding:0}}.paragraph--image-aside-copy.align--right>.copy{grid-column:2/span 10}@media (min-width:360px){.paragraph--image-aside-copy.align--right>.copy{grid-column:2/span 8}}@media (min-width:740px){.paragraph--image-aside-copy.align--right>.copy{grid-column:2/span 9}}@media (min-width:1px) and (max-width:959px){.paragraph--image-aside-copy.align--right>.copy{grid-row:2}}@media (min-width:960px){.paragraph--image-aside-copy.align--right>.copy{grid-column:1/span 6}}@media (min-width:1400px){.paragraph--image-aside-copy.align--right>.copy{grid-column:2/span 4}}@media (min-width:1px) and (max-width:959px){.paragraph--image-aside-copy.align--right>.image{grid-row:1}}@media (min-width:960px){.paragraph--image-aside-copy.align--right>.image{grid-column:8/span 5;grid-row:1}}@media (min-width:1400px){.paragraph--image-aside-copy.align--right>.image{grid-column:7/span 6}}.paragraph--image-aside-copy.align--right>.image:before{left:auto;right:0}.paragraph--copy-over-image .copy{grid-column:2/span 11}@media (min-width:1px) and (max-width:739px){.paragraph--logo-text{display:block}}.paragraph--logo-text .image{width:95px;flex-shrink:0;margin-right:1.7em}@media (min-width:740px){.paragraph--logo-text .image{width:120px}}.slick-list,.slick-track{width:100%;height:100%;position:absolute;top:0;left:0}.social li:not(:last-child){margin-right:1em}.social a{position:relative;outline-offset:2px}.social a,.social a:before{width:35px;height:35px;display:block;color:#fff}.social a:before{transition:all .3s ease-in-out 0s;position:absolute;content:"";font-size:35px;font-family:icomoon;font-style:normal;font-weight:400;speak:none;text-decoration:none;text-align:center;text-rendering:optimizeLegibility;line-height:35px;float:left;z-index:1;text-indent:0;top:50%;left:50%;right:auto;bottom:auto;transform:translateX(-50%);transform:translateY(-50%);transform:translate(-50%,-50%)}.social a[href*=instagram]:before{content:"\e903"}.social a[href*=facebook]:before{content:"\e909"}.social a[href*="mailto:"]:before{content:"\e904"}.site-footer{padding-top:6em;padding-bottom:4em}@media (min-width:1px) and (max-width:739px){.site-footer .footer-top{display:block}}.site-footer .logo{width:135px}@media (min-width:960px){.site-footer .logo{width:200px}}@media (min-width:740px){.site-footer ul{margin-top:0}}.site-footer .copyright{font-style:italic;color:#939597;margin-top:4em}.parallax{transform:translateY(var(--parallax-offset))!important}.carousel:after{width:100%;height:100%;position:absolute;top:0;left:0;display:block;content:"";background:rgba(33,33,33,.3)}.site-header{height:450px}@media (min-width:740px){.site-header{height:650px}}@media (min-width:1400px){.site-header{height:90vh}}.site-header .copy{padding-top:5em}.site-header .logo{width:200px}@media (min-width:740px){.site-header .logo{width:400px}}@media (min-width:1400px){.site-header .logo{width:550px}}.site-header h1{margin:.3em 0}.site-header h4{margin-left:auto;margin-right:auto;max-width:30ch}@media (min-width:740px){.site-header h4{max-width:none}}.site-header h4 span{font-weight:300;letter-spacing:-.1em;display:inline-block;margin:0 .3em 0 .15em}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
